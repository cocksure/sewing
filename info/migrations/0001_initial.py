# Generated by Django 5.2.5 on 2025-09-03 13:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ColorGraphic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='', max_length=128, verbose_name='Код')),
                ('name', models.CharField(max_length=512, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'График',
                'verbose_name_plural': 'График',
                'db_table': 'color_graphic',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ColorGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Названия')),
                ('code', models.CharField(max_length=3, verbose_name='Code')),
                ('last_color_code', models.CharField(max_length=10, verbose_name='Последный код цвета')),
            ],
            options={
                'verbose_name': 'Группа цветов',
                'verbose_name_plural': 'Группы цветов',
                'db_table': 'color_groups',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MaterialGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='Наименование')),
                ('code', models.CharField(max_length=256, unique=True, verbose_name='Код')),
            ],
            options={
                'verbose_name': 'Группа материалов',
                'verbose_name_plural': 'Группы материалов',
                'db_table': 'material_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MaterialSpecialGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Специальная группа',
                'verbose_name_plural': 'Специальные группы',
                'db_table': 'material_special_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MeasurementUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=8, verbose_name='Единица')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерении',
                'db_table': 'measurement_unit',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Тип продукта')),
            ],
            options={
                'verbose_name': 'Тип модели',
                'verbose_name_plural': 'Типы модели',
                'db_table': 'product_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecipeGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Группа рецепт',
                'verbose_name_plural': 'Группа Рецептов',
                'db_table': 'recipe_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecipeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='Наименование')),
                ('code', models.CharField(max_length=2, null=True, verbose_name='Код')),
            ],
            options={
                'verbose_name': 'Вид рецепт',
                'verbose_name_plural': 'Виды Рецептов',
                'db_table': 'recipe_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Названия')),
                ('is_master', models.BooleanField(blank=True, default=False, verbose_name='Мастер')),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
            },
        ),
        migrations.CreateModel(
            name='SewingMachineType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Тип машины')),
                ('description', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Описания')),
            ],
            options={
                'verbose_name': 'Тип швейной машины',
                'verbose_name_plural': 'Типы швейных машин',
                'db_table': 'sewing_machine_types',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Размер')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('notes', models.CharField(blank=True, max_length=255, null=True, verbose_name='Примечание')),
            ],
            options={
                'verbose_name': 'Размер (справочник)',
                'verbose_name_plural': 'Размеры (справочник)',
                'db_table': 'sewing_size_catalog',
            },
        ),
        migrations.CreateModel(
            name='TypeOrderColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='Наименование')),
                ('code', models.CharField(max_length=128, null=True, verbose_name='Код')),
            ],
            options={
                'verbose_name': 'Вид заказ',
                'verbose_name_plural': 'Виды Заказов',
                'db_table': 'type_order_color',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Обновлено')),
                ('name', models.CharField(max_length=128, verbose_name='Фабрика')),
                ('official_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Официальное название')),
                ('company', models.CharField(blank=True, choices=[('uztex', 'UzTex Group'), ('zarofat', 'Zarofat')], default='uztex', max_length=128, verbose_name='Компания')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем создано')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем обновлено')),
            ],
            options={
                'verbose_name': 'Фабрика',
                'verbose_name_plural': 'Фабрики',
                'db_table': 'factories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Firm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Обновлено')),
                ('code', models.CharField(max_length=128, unique=True, verbose_name='Код')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование')),
                ('type', models.CharField(choices=[('customer', 'Заказчик'), ('provision', 'Поставщик'), ('customer-provision', 'Заказчик-Поставщик')], default='customer', max_length=40, verbose_name='Тип')),
                ('status', models.SmallIntegerField(default=1, verbose_name='Статус')),
                ('legal_address', models.CharField(blank=True, max_length=512, null=True, verbose_name='Юридический адрес')),
                ('actual_address', models.CharField(blank=True, max_length=512, null=True, verbose_name='Фактический адрес')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер телефона')),
                ('fax', models.CharField(blank=True, max_length=30, null=True, verbose_name='Факс')),
                ('email', models.CharField(blank=True, max_length=128, null=True, verbose_name='Электронная почта')),
                ('certificate', models.CharField(blank=True, max_length=128, null=True, verbose_name='Номер лицензии')),
                ('material_discount', models.IntegerField(blank=True, default=0, null=True, verbose_name='Материальная скидка')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем создано')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем обновлено')),
            ],
            options={
                'verbose_name': 'Фирма',
                'verbose_name_plural': 'Фирмы',
                'db_table': 'firms',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Обновлено')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование')),
                ('code', models.CharField(max_length=128, unique=True, verbose_name='Код')),
                ('input_date', models.DateField(blank=True, null=True, verbose_name='Дата введение')),
                ('create_date', models.DateField(blank=True, null=True, verbose_name='Дата разработки')),
                ('confirm_date', models.DateField(blank=True, null=True, verbose_name='Дата подтверждения')),
                ('catalog_n', models.CharField(blank=True, max_length=128, null=True, verbose_name='Каталог №')),
                ('color_tone', models.SmallIntegerField(blank=True, choices=[(1, 'Светлый'), (2, 'Средний'), (3, 'Тёмный'), (4, 'Белый')], null=True, verbose_name='Тон цвета')),
                ('rr', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='R')),
                ('gg', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='G')),
                ('bb', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='B')),
                ('rgb', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='RGB')),
                ('rgba', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='RGBA')),
                ('hex', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='HEX')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем создано')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем обновлено')),
                ('graphic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='colors', to='info.colorgraphic', verbose_name='График')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='colors', to='info.colorgroup', verbose_name='Группа')),
                ('firm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='colors', to='info.firm', verbose_name='Фирма')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
                'db_table': 'color',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Обновлено')),
                ('code', models.CharField(max_length=128, unique=True, verbose_name='Код')),
                ('title', models.CharField(blank=True, db_index=True, max_length=512, verbose_name='Наименование')),
                ('type', models.CharField(blank=True, max_length=128, null=True, verbose_name='Тип')),
                ('definition_type', models.SmallIntegerField(default=0, verbose_name='Тип определения')),
                ('width', models.FloatField(blank=True, null=True, verbose_name='Ширина')),
                ('length', models.FloatField(blank=True, null=True, verbose_name='Длина')),
                ('thickness', models.FloatField(blank=True, null=True, verbose_name='Толщина')),
                ('density', models.FloatField(blank=True, null=True, verbose_name='Плотность')),
                ('kind_of_station', models.CharField(blank=True, choices=[('2', 'Автоматический'), ('5', 'Ручной')], max_length=32, null=True, verbose_name='Режим дозирования')),
                ('barcode_need', models.SmallIntegerField(default=1, verbose_name='Генерация баркода?')),
                ('barcode', models.CharField(blank=True, max_length=128, null=True, verbose_name='Баркод')),
                ('accounting_code', models.CharField(blank=True, max_length=128, null=True, verbose_name='Бухгалтерский код')),
                ('producible', models.BooleanField(default=False, verbose_name='Производимый')),
                ('planned_cost', models.FloatField(default=0, verbose_name='Плановая цена')),
                ('stock_dec_places', models.PositiveSmallIntegerField(default=2, verbose_name='Десятичный разряд для склада')),
                ('gramaj', models.FloatField(default=0, verbose_name='Грам в метр')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='info.color', verbose_name='Цвет')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем создано')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем обновлено')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='materials', to='info.materialgroup', verbose_name='Группа')),
                ('special_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='materials', to='info.materialspecialgroup', verbose_name='Специальная группа')),
                ('m_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='info.measurementunit', verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Материалы',
                'db_table': 'material',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='color',
            name='tested_material',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='colors', to='info.material', verbose_name='Материал добавление'),
        ),
        migrations.CreateModel(
            name='PriceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='Наименование')),
                ('price', models.IntegerField(blank=True, default=0, verbose_name='Цена')),
                ('m_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='info.measurementunit', verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Цена категория',
                'verbose_name_plural': 'Цены категория',
                'db_table': 'price_category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MaterialGroupCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_group', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='price_category_material', to='info.materialgroup', verbose_name='Группа Материал')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='price_category_material', to='info.pricecategory', verbose_name='Группа Материал')),
            ],
            options={
                'verbose_name': 'Категория материал',
                'verbose_name_plural': 'Категория материал',
                'db_table': 'material_group_category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Обновлено')),
                ('name', models.CharField(max_length=128, verbose_name='Названия')),
                ('order', models.SmallIntegerField(blank=True, null=True, verbose_name='Порядок')),
                ('is_parallel', models.BooleanField(default=False, verbose_name='Выполняется параллелно')),
                ('is_record_keeped', models.BooleanField(default=True, verbose_name='Введется учет')),
                ('barcode', models.CharField(blank=True, max_length=128, null=True, unique=True, verbose_name='Штрих-код')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем создано')),
                ('replaceable_processes', models.ManyToManyField(blank=True, related_name='replaced_processes', to='info.process', verbose_name='Заменяемые процессы')),
                ('required_process', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='required_processes', to='info.process', verbose_name='Обязательный процесс')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем обновлено')),
                ('product_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='info.producttype', verbose_name='Тип производство')),
            ],
            options={
                'verbose_name': 'Процесс',
                'verbose_name_plural': 'Процессы',
                'db_table': 'process',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='RawMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Обновлено')),
                ('name', models.CharField(max_length=64, verbose_name='Raw Material name')),
                ('price', models.FloatField(verbose_name='Material price')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем создано')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='raw_materials', to='info.producttype')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем обновлено')),
            ],
            options={
                'verbose_name': 'Сырье',
                'verbose_name_plural': 'Сырье',
                'db_table': 'raw_material',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='color',
            name='recipe_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='colors', to='info.recipegroup', verbose_name='Группа рецепт'),
        ),
        migrations.AddField(
            model_name='color',
            name='recipe_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='colors', to='info.recipetype', verbose_name='Вид рецепт'),
        ),
        migrations.CreateModel(
            name='ProcessRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('individual', models.BooleanField(blank=True, default=False, verbose_name='Индивидуальный')),
                ('salary_percent', models.FloatField(default=0, verbose_name='Процент ЗП')),
                ('salary_group', models.IntegerField(blank=True, default=1, null=True, verbose_name='Группа ЗП')),
                ('work_in_machine', models.BooleanField(blank=True, default=False, help_text='Может работать только в машине', verbose_name='Работа в машине')),
                ('work_in_max_machine', models.PositiveSmallIntegerField(blank=True, default=1, help_text='Максимальное количество машин, которые может работать параллелно', null=True, verbose_name='Максимальное количество параллелных машин')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='roles', to='info.process', verbose_name='Процесс')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='process_roles', to='info.role', verbose_name='Роль')),
            ],
            options={
                'verbose_name': 'Роль сотрудника в процессе',
                'verbose_name_plural': 'Роли сотрудников в процессе',
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Операция')),
                ('default_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Цена по умолчанию')),
                ('default_duration', models.PositiveIntegerField(default=0, verbose_name='Длительность, сек (по умолчанию)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('notes', models.CharField(blank=True, max_length=255, null=True, verbose_name='Примечание')),
                ('machine_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='operations', to='info.sewingmachinetype', verbose_name='Тип машины')),
            ],
            options={
                'verbose_name': 'Операция (справочник)',
                'verbose_name_plural': 'Операции (справочник)',
                'db_table': 'sewing_operation_catalog',
            },
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Обновлено')),
                ('year', models.CharField(default='2025', max_length=4, verbose_name='Год')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем создано')),
                ('firm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='info.firm', verbose_name='Фирма')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем обновлено')),
            ],
            options={
                'verbose_name': 'Спецификация',
                'verbose_name_plural': 'Спецификации',
                'db_table': 'specification',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SubMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Обновлено')),
                ('percent', models.FloatField(verbose_name='Процент')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем создано')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_materials', to='info.material', verbose_name='Материал')),
                ('sub_material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='as_sub_material', to='info.material', verbose_name='Субматериал')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем обновлено')),
            ],
            options={
                'verbose_name': 'Определение субматериалов',
                'verbose_name_plural': 'Определении субматериалов',
                'db_table': 'sub_materials',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='color',
            name='type_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='colors', to='info.typeordercolor', verbose_name='Вид заказ'),
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Обновлено')),
                ('file', models.FileField(upload_to='%Y/%m/%d', verbose_name='Файл')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем создано')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем обновлено')),
            ],
            options={
                'verbose_name': 'Загруженный файл',
                'verbose_name_plural': 'Загруженные файлы',
                'db_table': 'upload_files',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UploadedImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Обновлено')),
                ('image', models.ImageField(upload_to='%Y/%m/%d', verbose_name='Фото')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем создано')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем обновлено')),
            ],
            options={
                'verbose_name': 'Загруженная картинка',
                'verbose_name_plural': 'Загруженные картинки',
                'db_table': 'upload_images',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='material',
            name='image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='info.uploadedimage', verbose_name='Изображения'),
        ),
        migrations.AddField(
            model_name='firm',
            name='logo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='info.uploadedimage'),
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Обновлено')),
                ('name', models.CharField(max_length=128, verbose_name='Названия')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем создано')),
                ('processes', models.ManyToManyField(related_name='work_types', to='info.process', verbose_name='Процессы')),
                ('product_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='info.producttype', verbose_name='Тип продукции')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL, verbose_name='Кем обновлено')),
            ],
            options={
                'verbose_name': 'Вид работы',
                'verbose_name_plural': 'Виды работы',
                'db_table': 'work_type',
                'managed': True,
            },
        ),
        migrations.AddIndex(
            model_name='firm',
            index=models.Index(fields=['name'], name='firms_name_93d479_idx'),
        ),
    ]
